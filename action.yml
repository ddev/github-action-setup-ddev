name: 'Setup and start DDEV action'
description: 'Set up your GitHub Actions workflow with DDEV'
author: 'Jonas Eberle and DDEV contributors'

inputs:
  ddevDir:
    description: 'Path to your DDEV project. This path needs to contain the .ddev/ directory.'
    required: false
    default: '.'

  autostart:
    description: 'Starts your DDEV project immediately.'
    required: false
    default: 'true'

  version:
    description: 'Install a specific DDEV version. Example: 1.24.0'
    required: false
    default: 'latest'

  retryAttempts:
    description: 'Maximum number of retry attempts for DDEV installation and operations'
    required: false
    default: '5'

  initialDelay:
    description: 'Initial delay in seconds between retries'
    required: false
    default: '2'

  maxDelay:
    description: 'Maximum delay in seconds between retries'
    required: false
    default: '30'

  retryMultiplier:
    description: 'Delay multiplier for exponential backoff'
    required: false
    default: '2'

  jitterPercent:
    description: 'Jitter percentage (0-100) to add randomness to retry delays'
    required: false
    default: '25'

  installScriptUrl:
    description: 'URL to the DDEV installation script'
    required: true
    default: 'https://raw.githubusercontent.com/ddev/ddev/master/scripts/install_ddev.sh'

runs:
  using: 'composite'
  steps:
    - name: Download DDEV install script
      shell: bash
      run: |       
        "${{ github.action_path }}/scripts/retry.sh" \
          --attempts "${{ inputs.retryAttempts }}" \
          --initial-delay "${{ inputs.initialDelay }}" \
          --max-delay "${{ inputs.maxDelay }}" \
          --multiplier "${{ inputs.retryMultiplier }}" \
          --jitter "${{ inputs.jitterPercent }}" \
          --description "Download DDEV install script" \
          -- curl -fsSL --retry 3 --retry-max-time 60 --retry-connrefused \
             -o /tmp/install_ddev.sh \
             "${{ inputs.installScriptUrl }}"

    - name: Install DDEV
      shell: bash
      run: |
        if [[ '${{ inputs.version }}' != 'latest' ]]; then
          VERSION_ARG="v${{ inputs.version }}"
          echo "Installing DDEV version: ${VERSION_ARG}"
        else
          VERSION_ARG=""
          echo "Installing latest DDEV version"
        fi
        
        # Make installation script executable
        chmod +x /tmp/install_ddev.sh
        
        "${{ github.action_path }}/scripts/retry.sh" \
          --attempts "${{ inputs.retryAttempts }}" \
          --initial-delay "${{ inputs.initialDelay }}" \
          --max-delay "${{ inputs.maxDelay }}" \
          --multiplier "${{ inputs.retryMultiplier }}" \
          --jitter "${{ inputs.jitterPercent }}" \
          --description "DDEV installation" \
          -- /tmp/install_ddev.sh ${VERSION_ARG}

    - name: Start DDEV project
      shell: bash
      working-directory: ${{ inputs.ddevDir }}
      if: inputs.autostart == 'true'
      run: |
        ddev start

branding:
  icon: 'cpu'
  color: yellow
